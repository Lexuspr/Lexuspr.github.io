{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","ciudad","_this","current","value","pais","datosConsulta","onSubmit","this","id","ref","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarResultado","_this$props$resultado","resultado","name","weather","main","url_icono","concat","icon","alt","temp","toFixed","src","temp_max","temp_min","console","log","App","state","error","consulta","consultarApi","_this$state$consulta","url","fetch","then","json","datos","setState","catch","prevProps","prevState","cod","componentes_Error","componentes_Clima","componentes_Header","componentes_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2eb4d495.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper light-blue darken-2\">\r\n                    <a className=\"brand-logo\">{props.titulo}</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Formulario extends Component{\r\n\r\n    ciudadRef = React.createRef();\r\n    paisRef = React.createRef();\r\n    buscarClima = e => {\r\n        e.preventDefault();\r\n        \r\n        const respuesta = {\r\n            ciudad: this.ciudadRef.current.value,\r\n            pais: this.paisRef.current.value,\r\n        }\r\n        \r\n\r\n        this.props.datosConsulta(respuesta);\r\n\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <form onSubmit={this.buscarClima}>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <input id=\"ciudad\" ref={this.ciudadRef} type=\"text\" />\r\n                                <label htmlFor=\"ciudad\" >Ciudad: </label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <select ref={this.paisRef}>\r\n                                    <option value=\"\" defaultValue>\r\n                                        Elige un pais\r\n                                    </option>\r\n                                    <option value=\"AR\">\r\n                                        Argentina\r\n                                    </option>\r\n                                    <option value=\"CO\">\r\n                                        Colombia\r\n                                    </option>\r\n                                    <option value=\"CR\">\r\n                                        Costa Rica\r\n                                    </option>\r\n                                    <option value=\"ES\">\r\n                                        España\r\n                                    </option>\r\n                                    <option value=\"US\">\r\n                                        Estados Unidos\r\n                                    </option>\r\n                                    <option value=\"MX\">\r\n                                        México\r\n                                    </option>\r\n                                    <option value=\"PE\">\r\n                                        Perú\r\n                                    </option>\r\n                                </select>\r\n                                <label htmlFor=\"pais\">Pais: </label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2 buscador\">\r\n                                <input type=\"submit\" className=\"waves-effect waves-light btn-large yellow accent-4\" value=\"Buscar ...\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6 offset-m3\">\r\n                    <div className=\"card-panel red darken-4 error\">\r\n                        {props.mensaje}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\n\r\nclass Clima extends Component {\r\n    \r\n    mostrarResultado = () => {\r\n\r\n        const {name, weather, main } = this.props.resultado;\r\n\r\n        if(!name || !weather || !main) return null;\r\n\r\n        const kelvin = 273.15;\r\n\r\n        const url_icono = `http://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n        const alt = `Clima de ${name}`;\r\n\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"resultado col s12 m8 l6 offset-m2 offset-l3\">\r\n                    <div className=\"card-panel light-blue align-center\">\r\n                        <span className=\"white-text\">\r\n                            <h2>Resultado Clima de: {name} </h2>\r\n                            <p className=\"temperatura\">\r\n                                Actual: {(main.temp - kelvin).toFixed(2)} &deg;C\r\n                                <img src={url_icono} alt={alt}></img>\r\n                            </p>\r\n                            <p>\r\n                                Max. {(main.temp_max - kelvin).toFixed(2)} &deg;\r\n                            </p>\r\n                            <p>\r\n                                Min. {(main.temp_min - kelvin).toFixed(2)} &deg;\r\n                            </p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.resultado);\r\n        return (\r\n            <div className=\"container\">\r\n                {this.mostrarResultado()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clima;","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Error from './componentes/Error';\nimport Clima from './componentes/Clima';\n\n\nclass App extends Component {\n\n  state = {\n    error: false,\n    consulta: {},\n    resultado: {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.consulta !== this.state.consulta){\n      this.consultarApi();\n    }\n  }\n\n  consultarApi = () => {\n    const {ciudad, pais} = this.state.consulta;\n    if(!ciudad || !pais) return null;\n\n    const appID = '7dc0843c7955ad634bdf9c0b77b37954';\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appID}`;\n\n    fetch(url)\n      .then(respuesta => {\n        return respuesta.json()\n      })\n      .then(datos => {\n        this.setState({\n          resultado: datos\n        })\n      })\n      .catch(error => {\n        console.log(error);\n        \n      })\n    \n\n\n    //fetch api\n\n  }\n\n  datosConsulta = respuesta => {\n    if(respuesta.ciudad === '' || respuesta.pais === ''){\n      this.setState({\n        error: true,\n      })\n    } else {\n\n      this.setState({\n        error: false,\n        consulta: respuesta\n      })\n    }\n    \n  }\n  render() {\n\n    const {error} = this.state,\n          {cod} = this.state.resultado;\n\n    let resultado;\n\n    if (error) {\n      resultado = <Error mensaje=\"Ambos campos son obligatorios\"/>\n    } else if (cod === \"404\") {\n      resultado = <Error mensaje=\"Ciudad no encontrada\"/>\n    } else {\n      resultado = <Clima resultado={this.state.resultado} />\n    }\n\n    return (\n      <div className=\"App\">\n        <Header \n          titulo=\"Clima React\"\n        />\n        <Formulario \n          datosConsulta={this.datosConsulta}\n        />\n        {resultado}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}